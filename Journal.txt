Mern Authentication System
    - Complete MERN Authentication System with
        Password reset, email verification, JWT authentication and Email verification

Step 1 - install packages into backend
    At backend File -> terminal -> npm init
    remove test script in package.json
    terminal --> npm i express cors dotenv nodemon jsonwebtoken mongoose bcryptjs nodemailer cookie-parser
        -- express -creates the app
        -- cors - connects backend with front end
        -- dotenv - stores involvement variables in backend
        -- nodemon - restarts backend whenever code changes in file
        -- jsonwebtoken - creates the token for authentication
        -- mongoose - connects with the mongo database
        -- bycryptjs - encrypts the password and save in database
        -- nodemailer - send the emails
        -- cookie-parser - sends cookies in the API response
    add "type": "module" after "main" and "server": "nodemon server.js" in package.json to import and export

step 2 - create server.js file, import stuff, app.use and listen to port

Step 3 - create mongodb database, store address and password to .env file MONGODB_URI=""
       - Create config directory under backend, create mongodb.js

step 4 - create .gitignore file
       node_modules
       .env

Step 5 - Create GitHub Repository
       - Create new repository in gitHub
       - go to root app folder -> git init
       - -> git remote add origin <repository>
       - -> git add .
       - -> git commit -m "message"
       - if first time -> git push -u origin main
            else -> git push -u origin master
       - -> git push
            ISSUES - if accidentally add .gitignorefile
                    if single file -> git rm --cached <file location>
                    if multiple file -> git rm -r --cached <file location>


step 6: create database schema
        - create models directory in backend
            - create userModels.js file
            - import mongoose, create schema, export schema

step 7: create controllers directory under backend
            - create authController.js file
